{"version":3,"sources":["fake-stream.js"],"names":["define","streams","DecodeStream","FakeStream","inherit","klassName","_construct","stream","this","dict","Stream","prototype","call","readBlock","bufferLength","ensureBuffer","getBytes","length","end","pos","eof","bufEnd","buffer","subarray"],"mappings":";;;;;;;AAAAA,QACI,YACA,mBACD,SAASC,EAASC,GAEjB,IAAIC,EAAaD,EAAaE,SAC1BC,UAAY,aAEZC,WAAa,SAASC,GAClBC,KAAKC,KAAOF,EAAOE,KACnBC,OAAOC,UAAUL,WAAWM,KAAKJ,OAGrCK,UAAY,WACR,IAAIC,EAAeN,KAAKM,aACxBA,GAAgB,KACHN,KAAKO,aAAaD,GAC/BN,KAAKM,aAAeA,GAGxBE,SAAW,SAAUC,GACjB,IAAIC,EAAKC,EAAMX,KAAKW,IAEpB,GAAIF,EAAQ,CAIR,IAHAT,KAAKO,aAAaI,EAAMF,GACxBC,EAAMC,EAAMF,GAEJT,KAAKY,KAAOZ,KAAKM,aAAeI,GACpCV,KAAKK,YAET,IAAIQ,EAASb,KAAKM,aACdI,EAAMG,IACNH,EAAMG,QAEVb,KAAKY,KAAM,EACXF,EAAMV,KAAKM,aAIf,OADAN,KAAKW,IAAMD,EACJV,KAAKc,OAAOC,SAASJ,EAAKD,MAKzC,OAAOjB,EAAQE,WAAaA","file":"../fake-stream.js","sourcesContent":["define([\r\n    \"./streams\",\r\n    \"./decode-stream\"\r\n], function(streams, DecodeStream) {\r\n\r\n    var FakeStream = DecodeStream.inherit({\r\n        klassName : \"FakeStream\",\r\n\r\n        _construct : function(stream) {\r\n            this.dict = stream.dict;\r\n            Stream.prototype._construct.call(this);          \r\n        },\r\n\r\n        readBlock : function() {\r\n            var bufferLength = this.bufferLength;\r\n            bufferLength += 1024;\r\n            var buffer = this.ensureBuffer(bufferLength);\r\n            this.bufferLength = bufferLength;\r\n        },\r\n\r\n        getBytes : function (length) {\r\n            var end, pos = this.pos;\r\n\r\n            if (length) {\r\n                this.ensureBuffer(pos + length);\r\n                end = pos + length;\r\n\r\n                while (!this.eof && this.bufferLength < end)\r\n                    this.readBlock();\r\n\r\n                var bufEnd = this.bufferLength;\r\n                if (end > bufEnd)\r\n                    end = bufEnd;\r\n            } else {\r\n                this.eof = true;\r\n                end = this.bufferLength;\r\n            }\r\n\r\n            this.pos = end;\r\n            return this.buffer.subarray(pos, end);\r\n        }\r\n\r\n    });\r\n\r\n    return streams.FakeStream = FakeStream;\r\n});\r\n"]}