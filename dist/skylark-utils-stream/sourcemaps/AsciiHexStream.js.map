{"version":3,"sources":["AsciiHexStream.js"],"names":["define","skylark","langx","streams","DecodeStream","hexvalueMap","9","32","48","49","50","51","52","53","54","55","56","57","65","66","67","68","69","70","97","98","99","100","101","102","AsciiHexStream","inherit","klassName","init","str","this","dict","overrided","readBlock","c","n","decodeLength","buffer","bufferLength","i","length","gtCode","charCodeAt","bytes","getBytes","ensureBuffer","eof"],"mappings":";;;;;;;AAAAA,QACI,wBACA,sBACA,YACA,kBACD,SAASC,EAASC,EAAOC,EAASC,GACjC,GAAIC,IACAC,KACAC,MACAC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,IAAK,GACLC,IAAK,GACLC,IAAK,IAGLC,EAAiB1B,EAAa2B,SAC9BC,UAAY,iBAEZC,KAAO,SAASC,GACZC,KAAKD,IAAMA,EACXC,KAAKC,KAAOF,EAAIE,KAEhBD,KAAKE,aAGTC,UAAY,WACR,GAEIC,GAAGC,EACHC,EAAcC,EAAQC,EAAcC,EAAGC,EAHvCC,EAAS,IAAIC,WAAW,GACxBC,EAAQb,KAAKD,IAAIe,UAQrB,KAJAR,EAAgBO,EAAMH,OAAS,GAAM,EACrCH,EAASP,KAAKe,aAAaf,KAAKQ,aAAeF,GAC/CE,EAAeR,KAAKQ,aAEfC,EAAI,EAAGC,EAASG,EAAMH,OAAQD,EAAIC,EAAQD,IAAK,CAEhD,IADAL,EAAIlC,EAAY2C,EAAMJ,IACfL,OAAYK,EAAI,EAAKC,GACxBN,EAAIlC,EAAY2C,IAAQJ,GAGvBA,GAAI,EAAKC,GAAWG,EAAMJ,EAAI,KAAOE,GACtCN,EAAInC,EAAY2C,IAAQJ,IACxBF,EAAOC,KAAsB,GAAJJ,EAASC,GAI9BQ,EAAMJ,KAAOE,IACbJ,EAAOC,KAAsB,GAAJJ,GAKrCJ,KAAKQ,aAAeA,EACpBR,KAAKgB,KAAM,IAKnB,OAAOhD,GAAQ2B,eAAiBA","file":"../AsciiHexStream.js","sourcesContent":["define([\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"./streams\",\r\n    \"./DecodeStream\"\r\n], function(skylark, langx, streams, DecodeStream) {\r\n    var hexvalueMap = {\r\n        9: -1, // \\t\r\n        32: -1, // space\r\n        48: 0,\r\n        49: 1,\r\n        50: 2,\r\n        51: 3,\r\n        52: 4,\r\n        53: 5,\r\n        54: 6,\r\n        55: 7,\r\n        56: 8,\r\n        57: 9,\r\n        65: 10,\r\n        66: 11,\r\n        67: 12,\r\n        68: 13,\r\n        69: 14,\r\n        70: 15,\r\n        97: 10,\r\n        98: 11,\r\n        99: 12,\r\n        100: 13,\r\n        101: 14,\r\n        102: 15\r\n    };\r\n\r\n    var AsciiHexStream = DecodeStream.inherit({\r\n        klassName : \"AsciiHexStream\",\r\n\r\n        init : function(str) {\r\n            this.str = str;\r\n            this.dict = str.dict;\r\n\r\n            this.overrided();          \r\n        },\r\n\r\n        readBlock : function() {\r\n            var gtCode = '>'.charCodeAt(0),\r\n                bytes = this.str.getBytes(),\r\n                c, n,\r\n                decodeLength, buffer, bufferLength, i, length;\r\n\r\n            decodeLength = (bytes.length + 1) >> 1;\r\n            buffer = this.ensureBuffer(this.bufferLength + decodeLength);\r\n            bufferLength = this.bufferLength;\r\n\r\n            for (i = 0, length = bytes.length; i < length; i++) {\r\n                c = hexvalueMap[bytes[i]];\r\n                while (c == -1 && (i + 1) < length) {\r\n                    c = hexvalueMap[bytes[++i]];\r\n                }\r\n\r\n                if ((i + 1) < length && (bytes[i + 1] !== gtCode)) {\r\n                    n = hexvalueMap[bytes[++i]];\r\n                    buffer[bufferLength++] = c * 16 + n;\r\n                } else {\r\n                    // EOD marker at an odd number, behave as if a 0 followed the last\r\n                    // digit.\r\n                    if (bytes[i] !== gtCode) {\r\n                        buffer[bufferLength++] = c * 16;\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.bufferLength = bufferLength;\r\n            this.eof = true;        \r\n       }\r\n\r\n    });\r\n\r\n    return streams.AsciiHexStream = AsciiHexStream;\r\n});\r\n"]}