{"version":3,"sources":["DecryptStream.js"],"names":["define","skylark","langx","streams","DecodeStream","chunkSize","DecryptStream","inherit","klassName","init","str","decrypt","this","dict","overrided","readBlock","chunk","getBytes","length","eof","i","bufferLength","n","buffer","ensureBuffer"],"mappings":";;;;;;;AACAA,QACI,wBACA,sBACA,YACA,kBACD,SAASC,EAASC,EAAOC,EAASC,GAEjC,GAAIC,GAAY,IAEZC,EAAgBF,EAAaG,SAC7BC,UAAY,gBAEZC,KAAO,SAASC,EAAKC,GACjBC,KAAKF,IAAMA,EACXE,KAAKC,KAAOH,EAAIG,KAChBD,KAAKD,QAAUA,EACfC,KAAKE,aAGTC,UAAY,WACR,GAAIC,GAAQJ,KAAKF,IAAIO,SAASZ,EAC9B,KAAKW,GAAyB,GAAhBA,EAAME,OAEhB,YADAN,KAAKO,KAAM,EAGf,IAAIR,GAAUC,KAAKD,OACnBK,GAAQL,EAAQK,EAEhB,IACII,GADAC,EAAeT,KAAKS,aACjBC,EAAIN,EAAME,OACbK,EAASX,KAAKY,aAAaH,EAAeC,EAC9C,KAAKF,EAAI,EAAGA,EAAIE,EAAGF,IACfG,EAAOF,KAAkBL,EAAMI,EACnCR,MAAKS,aAAeA,IAI5B,OAAOlB,GAAQG,cAAgBA","file":"../DecryptStream.js","sourcesContent":["\r\ndefine([\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"./streams\",\r\n    \"./DecodeStream\"\r\n], function(skylark, langx, streams, DecodeStream) {\r\n\r\n    var chunkSize = 512;\r\n\r\n    var DecryptStream = DecodeStream.inherit({\r\n        klassName : \"DecryptStream\",\r\n\r\n        init : function(str, decrypt) {\r\n            this.str = str;\r\n            this.dict = str.dict;\r\n            this.decrypt = decrypt;\r\n            this.overrided();          \r\n        },\r\n\r\n        readBlock : function() {\r\n            var chunk = this.str.getBytes(chunkSize);\r\n            if (!chunk || chunk.length == 0) {\r\n                this.eof = true;\r\n                return;\r\n            }\r\n            var decrypt = this.decrypt;\r\n            chunk = decrypt(chunk);\r\n\r\n            var bufferLength = this.bufferLength;\r\n            var i, n = chunk.length;\r\n            var buffer = this.ensureBuffer(bufferLength + n);\r\n            for (i = 0; i < n; i++)\r\n                buffer[bufferLength++] = chunk[i];\r\n            this.bufferLength = bufferLength;\r\n        }\r\n    });\r\n\r\n    return streams.DecryptStream = DecryptStream;\r\n});\r\n"]}